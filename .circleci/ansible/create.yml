---
- name:
    Create a Packet.net bare metal server, wait for SSH and save
    instance metadata like server IP and ID for further consumption.
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Install Packet.net module dependencies
      pip:
        name: packet-python

    - name: Add SSH key to Packet account
      packet_sshkey:
        auth_token: "{{ lookup('env', 'PACKET_API_TOKEN') }}"
        key: "{{ lookup('env', 'PACKET_SSH_PUB_KEY') }}"
        label: ssh key

    - name: Create server
      packet_device:
        auth_token: "{{ lookup('env', 'PACKET_API_TOKEN') }}"
        facility: sjc1
        hostnames: "{{ lookup('env', 'CIRCLE_SHA1')|truncate(8,True,'') }}{{ '%Y%m%d%H%M%S'|strftime }}"
        operating_system: ubuntu_18_04
        plan: baremetal_1
        project_id: "{{ lookup('env', 'PACKET_PROJECT_ID') }}"
        state: active
        user_data: |
          #cloud-config
          users:
            - name: ova
              sudo: ALL=(ALL) NOPASSWD:ALL
        wait_for_public_IPv: 4
        wait_timeout: 600
      register: packet
      retries: 5
      delay: 10
      until: packet is succeeded

    - name: Create inventory file with Packet device details
      blockinfile:
        create: yes
        path: "{{ playbook_dir }}/inventory"
        block: |
          all:
            hosts:
              metal:
                ansible_host: {{ packet.devices[0].public_ipv4 }}
                ansible_port: 22
            vars:
              # disable SSH host key checking
              ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
              packet_device_id: {{ packet.devices[0].id }}

    - name: Create HOSTALIASES .hosts file, - a dynamic alternative of /etc/hosts
      blockinfile:
        create: yes
        path: "{{ playbook_dir }}/.hosts"
        block: |
          # see https://unix.stackexchange.com/a/226318/217844
          metal {{ packet.devices[0].public_ipv4 }}.xip.io

    - name: Wait for SSH
      wait_for:
        delay: 1
        host: "{{ packet.devices[0].public_ipv4 }}"
        port: 22
        state: started
        timeout: 120
